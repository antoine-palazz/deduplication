# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://kedro.readthedocs.io/en/stable/data/data_catalog.html

wi_dataset:
  type: deduplication.extras.datasets.broken_csv_dataset.BrokenCSVDataSet
  filepath: data/01_raw/wi_dataset.csv


preprocessed_dataset:
  type: pandas.ParquetDataSet
  filepath: data/02_intermediate/preprocessed_dataset.pq
  save_args:
      index: False

extensively_preprocessed_dataset:
  type: pandas.ParquetDataSet
  filepath: data/03_primary/extensively_preprocessed_dataset.pq
  save_args:
      index: False


preprocessed_complete_offers:
  type: pandas.ParquetDataSet
  filepath: data/04_feature/preprocessed_complete_offers.pq
  save_args:
      index: False

extensively_preprocessed_described_offers:
  type: pandas.ParquetDataSet
  filepath: data/04_feature/extensively_preprocessed_described_offers.pq
  save_args:
      index: False


gross_full_duplicates:
  type: pandas.ParquetDataSet
  filepath: data/05_model_inputs/gross_full_duplicates.pq
  save_args:
      index: False

gross_partial_duplicates:
  type: pandas.ParquetDataSet
  filepath: data/05_model_inputs/gross_partial_duplicates.pq
  save_args:
      index: False

gross_semantic_duplicates:
  type: pandas.ParquetDataSet
  filepath: data/05_model_inputs/gross_semantic_duplicates.pq
  save_args:
      index: False


subtle_duplicates_tf_idf:
  type: pandas.ParquetDataSet
  filepath: data/06_models/subtle_duplicates_tf_idf.pq
  save_args:
      index: False





all_duplicates_tf_idf:
  type: pandas.CSVDataSet
  filepath: data/07_model_output/all_duplicates_tf_idf.csv
  save_args:
      index: False
      header: False
  load_args:
      names:
          ['id1', 'id2', 'type']

all_duplicates_tf_idf_description:
  type: pandas.CSVDataSet
  filepath: data/08_reporting/all_duplicates_tf_idf_description.csv
  save_args:
      index: False


subtle_duplicates_multilingual_bert:
  type: pandas.ParquetDataSet
  filepath: data/06_models/subtle_duplicates_multilingual_bert.pq
  save_args:
      index: False

all_duplicates_multilingual_bert:
  type: pandas.CSVDataSet
  filepath: data/07_model_output/all_duplicates_multilingual_bert.csv
  save_args:
      index: False
      header: False
  load_args:
      names:
          ['id1', 'id2', 'type']

all_duplicates_multilingual_bert_description:
  type: pandas.CSVDataSet
  filepath: data/08_reporting/all_duplicates_multilingual_bert_description.csv
  save_args:
      index: False


subtle_duplicates_xlm_roberta:
  type: pandas.ParquetDataSet
  filepath: data/06_models/subtle_duplicates_xlm_roberta.pq
  save_args:
      index: False

all_duplicates_xlm_roberta:
  type: pandas.CSVDataSet
  filepath: data/07_model_output/all_duplicates_xlm_roberta.csv
  save_args:
      index: False
      header: False
  load_args:
      names:
          ['id1', 'id2', 'type']

all_duplicates_xlm_roberta_description:
  type: pandas.CSVDataSet
  filepath: data/08_reporting/all_duplicates_xlm_roberta_description.csv
  save_args:
      index: False


easy_duplicates:
  type: pandas.CSVDataSet
  filepath: data/06_models/easy_duplicates.csv
  save_args:
      index: False

easy_duplicates_description:
  type: pandas.CSVDataSet
  filepath: data/08_reporting/easy_duplicates_description.csv
  save_args:
      index: False



best_duplicates:
  type: pandas.CSVDataSet
  filepath: data/07_model_output/best_duplicates.csv
  save_args:
      index: False
      header: False
  load_args:
      names:
          ['id1', 'id2', 'type']

best_duplicates_description:
  type: pandas.CSVDataSet
  filepath: data/08_reporting/best_duplicates_description.csv
  save_args:
      index: False
